@model IEnumerable<BussinessObject.Models.Club>
@{
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
	<link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900" rel="stylesheet">
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
	var role = TempData["Role"] as string;
	int? userId = Context.Session.GetInt32("UserId");
	Layout = "_demo";
}
<style>
	.status-btn {
		border-radius: 8px;
		text-decoration: none;
		padding: 5px 10px;
		cursor: pointer;
		border: none;
		color: black;
		transition: background-color 0.3s ease;
	}

	.status-btn-active {
		background-color: green;
	}

	.status-btn-inactive {
		background-color: red;
	}

	.favorites-btn {
		display: none;
	}

	tr:hover .favorites-btn {
		display: inline;
	}

	.club-logo {
		width: 100px;
		height: 100px;
	}

	.Wrap {
		height: 100vh;
		overflow-y: scroll;
	}

		.Wrap::-webkit-scrollbar {
			display: none;
		}

</style>
<link rel="stylesheet" type="text/css" href="~/css/Club/Index.css">
@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
	<div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
	<div class="alert alert-success">@ViewBag.Message</div>
}
<div class="Wrap">
	<p>
		@if (role.Equals("Admin"))
		{
			<a class="btn btn-primary" style="float:right;margin-bottom:10px" asp-action="Create">Create</a>
		}
	</p>
	<div class="container">
		<div class="grid-margin stretch-card">
			<div class="card">
				<div class="card-body">
					<div class="table-responsive">
						<table class="table table-hover">
							<thead>
								<tr>
									<th></th>
									<th>Name</th>
									<th>Stadium</th>
									<th>City</th>
									<th></th>
									@if (role.Equals("Admin"))
									{
										<th>Status</th>
									}
								</tr>
							</thead>
							<tbody>
								@foreach (var club in Model)
								{
									<tr onmouseover="showFavoritesButton(this)" onmouseout="hideFavoritesButton(this)">
										<td><img src="@club.Logo" alt="Avatar" class="club-logo"></td>
										<td>@club.Name</td>
										<td>@club.Stadium.Name</td>
										<td>@club.City.Name</td>
										<td>
											<a href="@Url.Action("Index", "Player", new { clubId = club.ClubId })" style="border-radius: 8px; text-decoration: none; display: inline" class="btn btn-primary">View Players</a>
											@if (role.Equals("Admin"))
											{
												<form action="@Url.Action("Edit", new { id = club.ClubId })" style="display: inline">
													<button type="submit" style="border-radius: 8px; text-decoration: none">Edit</button>
												</form>
												<form method="post" action="@Url.Action("Delete", new { id = club.ClubId })" style="display: inline">
													<button type="submit" style="border-radius: 8px; text-decoration: none">Delete</button>
												</form>
											}
											else
											{
												<form method="post" action="@Url.Action("AddFavoriteClub", "FavoClub", new { clubId = club.ClubId })" style="display: inline" class="favorites-form">
													<input type="hidden" name="userId" value="@userId" />
													<button type="submit" style="border-radius: 8px; text-decoration: none" class="favorites-btn">Add to Favorites</button>
												</form>
											}
										</td>
										@if (role.Equals("Admin"))
										{
											<td>
												<button onclick="toggleClubStatus(@club.ClubId, this)" class="status-btn">
													<span class="status-text" style="color: @(club.Status == true ? "green" : "red")">@((club.Status == true) ? "Active" : "Unactive")</span>
												</button>
											</td>
										}
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>

	@*<div class="container">
	<div class="grid-margin stretch-card">
	<div class="card">
	<div class="card-body">
	<div class="table-responsive">
	<table class="table table-hover">
	<thead>
	<tr>
	<th></th>
	<th>Name</th>
	<th>Stadium</th>
	<th>City</th>
	<th></th>
	</tr>
	</thead>
	<tbody>
	@foreach (var club in Model)
	{
	<tr onmouseover="showFavoritesButton(this)" onmouseout="hideFavoritesButton(this)">
	<td><img src="@club.Logo" alt="Avatar" class="club-logo"></td>
	<td>@club.Name</td>
	<td>@club.Stadium.Name</td>
	<td>@club.City.Name</td>
	<td>
	<a href="@Url.Action("Index", "Player", new { clubId = club.ClubId })" style="border-radius: 8px; text-decoration: none; display: inline" class="btn btn-primary">View Players</a>
	@if (role.Equals("Admin"))
	{
	<form action="@Url.Action("Edit", new { id = club.ClubId })" style="display: inline">
	<button type="submit" style="border-radius: 8px; text-decoration: none">Edit</button>
	</form>
	<form method="post" action="@Url.Action("Delete", new { id = club.ClubId })" style="display: inline">
	<button type="submit" style="border-radius: 8px; text-decoration: none">Delete</button>
	</form>
	}
	else
	{
	<form method="post" action="@Url.Action("AddFavoriteClub", "FavoClub", new { clubId = club.ClubId })" style="display: inline" class="favorites-form">
	<input type="hidden" name="userId" value="@userId" />
	<button type="submit" style="border-radius: 8px; text-decoration: none" class="favorites-btn">Add to Favorites</button>
	</form>
	}
	</td>
	</tr>
	}
	</tbody>
	</table>
	</div>
	</div>
	</div>
	</div>
	</div>*@
</div>

<script>
	function toggleClubStatus(clubId) {
		fetch(`/Club/ToggleClubStatus?id=${clubId}`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			}
		})
			.then(response => {
				if (response.ok) {
					location.reload(); // Tải lại trang sau khi thay đổi trạng thái thành công
				} else {
					throw new Error('Something went wrong.');
				}
			})
			.catch(error => {
				console.error('Error:', error);
			});
	}
</script>
